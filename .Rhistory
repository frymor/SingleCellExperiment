knitr::opts_chunk$set(echo = TRUE)
counts_matrix <- data.frame(cell_1 = rpois(10, 10),
cell_2 = rpois(10, 10),
cell_3 = rpois(10, 30))
rownames(counts_matrix) <- paste0("gene_", 1:10)
counts_matrix <- as.matrix(counts_matrix) # must be a matrix object!
counts_matrix
sce <- SingleCellExperiment(assays = list(counts = counts_matrix))
library(SingleCellExperiment)
sce <- SingleCellExperiment(assays = list(counts = counts_matrix))
sce
sce <- SingleCellExperiment(assays = list(counts = counts_matrix))
sce
assay(sce, "counts")
counts(sce)
assay(sce, "counts")
sce <- scran::computeSumFactors(sce)
sce <- scater::normalize(sce)
sce <- scran::computeSumFactors(sce)
sce <- scater::normalize(sce)
sce
sce <- SingleCellExperiment(assays = list(counts = counts_matrix))
sce
assay(sce, 'logcounts')
assay(sce, "logcounts")
assays(sce)
sce <- scran::computeSumFactors(sce)
sce <- scater::normalize(sce)
sce
assays(sce)
head(assay(sce, "logcounts"))
assay(sce, "logcounts")
cell_metadata <- data.frame(batch = c(1, 1, 2))
rownames(cell_metadata) <- paste0("cell_", 1:3)
## Appending to existing object (requires DataFrame() coercion)
colData(sce) <- DataFrame(cell_metadata)
sce
colData(sce)
## From scratch:
sce <- SingleCellExperiment(assays = list(counts = counts_matrix),
colData = cell_metadata)
sce
sce <- scater::calculateQCMetrics(sce)
sce
colData(sce)
rowData(sce)[, 1:3]
sce[c("gene_1", "gene_4"), ]
savehistory()
sce <- scater::runPCA(sce)
sce <- scran::computeSumFactors(sce)
sce <- scater::normalize(sce)
sizeFactors(sce)
sce <- scater::runPCA(sce)
reducedDim(sce, "PCA")
sce <- scater::runTSNE(sce, perplexity = 0.1)
reducedDim(sce, "TSNE")
sce
reducedDimNames(sce)
u <- uwot::umap(t(logcounts(sce)), n_neighbors = 2)
reducedDim(sce, "UMAP_uwot") <- u
reducedDim(sce, "UMAP_uwot")
reducedDimNames(sce)
data_pkg <- c("HCAData", "ExperimentHub")
calc_pkg <- c("scater", "scran", "mbkmeans", "BiocSingular", "uwot")
visl_pkg <- c("RColorBrewer", "pheatmap", "ggplot2")
infr_pkg <- c("DelayedMatrixStats", "pryr", "BiocParallel")
BiocManager::install(c(data_pkg, calc_pkg, visl_pkg, infr_pkg))
data_pkg <- c("HCAData", "ExperimentHub")
calc_pkg <- c("scater", "scran", "mbkmeans", "BiocSingular", "uwot")
visl_pkg <- c("RColorBrewer", "pheatmap", "ggplot2")
infr_pkg <- c("DelayedMatrixStats", "pryr", "BiocParallel")
# Do once
# BiocManager::install(c(data_pkg, calc_pkg, visl_pkg, infr_pkg))
library(HCAData)
library(ExperimentHub)
library(scater)
library(scran)
library(uwot)
library(BiocSingular)
library(mbkmeans)
library(RColorBrewer)
library(pheatmap)
library(ggplot2)
library(DelayedMatrixStats)
library(pryr)
library(BiocParallel)
data_pkg <- c("HCAData", "ExperimentHub")
calc_pkg <- c("scater", "scran", "mbkmeans", "BiocSingular", "uwot")
visl_pkg <- c("RColorBrewer", "pheatmap", "ggplot2")
infr_pkg <- c("DelayedMatrixStats", "pryr", "BiocParallel")
# Do once
# BiocManager::install(c(data_pkg, calc_pkg, visl_pkg, infr_pkg))
library(HCAData)
library(ExperimentHub)
library(scater)
library(scran)
library(uwot)
library(BiocSingular)
library(mbkmeans)
library(RColorBrewer)
library(pheatmap)
library(ggplot2)
library(DelayedMatrixStats)
library(pryr)
library(BiocParallel)
eh <- ExperimentHub()
query(eh, "HCAData")
##change to brain
sce <- HCAData("ica_bone_marrow")
sce
colData(sce)
counts(sce)
head(rowData(sce))
set.seed(1234)
subsample <- sample(ncol(sce), 5000) # super downsample temporary
sce <- sce[, subsample]
rownames(sce) <- rowData(sce)$Symbol
sce
ctrl <- list(Mito = grep("^MT", rowData(sce)$Symbol))
sce <- calculateQCMetrics(sce,
feature_controls = ctrl,
compact = TRUE, # return as nested DF
BPPARAM = MulticoreParam(2))
ctrl <- list(Mito = grep("^MT", rowData(sce)$Symbol))
ctrl
